@model  TicketManagement.ViewModels.ViewTicketReplyMainModel
@using TicketManagement.CommonData
@using TicketManagement.Models
@using TicketManagement.ViewModels

@foreach (var reply in Model.ListofTicketreply)
{
    if (reply != null)
    {
        string stylename;
        string remarkText;

        var key = string.Concat("collapse", reply.TicketReplyId);

        if (reply.DeleteStatus)
        {
            stylename = "panel panel-danger";
            remarkText = "[ Deleted ]";
        }
        else
        {
            stylename = string.Concat("panel panel-", reply.Viewcolor);
            remarkText = string.Empty;
        }

        <div class="@stylename">
            <div data-toggle="collapse" data-target="#@key" class="panel-heading">
                <div class="col-sm-8 col-xs-12">
                    <i class="fa fa-reply" style="font-size: 24px; color: #000000"></i> |
                    @if (reply.SystemUser != null)
                    {
                        <button type="button" onclick="profile('@reply.SystemUser')" class="btn btn-default btn-xs">@reply.RepliedUserName</button>
                    }
                    @if (reply.TicketUser != null)
                    {
                        <button type="button" onclick="profile('@reply.TicketUser')" class="btn btn-default btn-xs">@reply.RepliedUserName</button> 
                    }
                    |
                    <i style="font-size: 14px; color: #50C878" class="fa fa-clock-o"></i>
                    @reply.CreatedDateDisplay
                </div>
                <div class="col-sm-4 col-xs-12">
                    <div class="dropdown pull-right">

                        <button class="btn btn-primary btn-xs dropdown-toggle" type="button" data-toggle="dropdown">
                            Options
                            <span class="caret"></span>
                        </button>
                        <ul class="dropdown-menu">

                            @if (!reply.DeleteStatus && reply.RoleId == Convert.ToInt16(StatusMain.Roles.AgentAdmin) && reply.SystemUser == Convert.ToInt64(Session["UserId"]))
                            {
                                <li><a href="/TicketAgentsAdmin/EditReply?tracking=@reply.TrackingId&ticketreply=@reply.TicketReplyId">Edit Ticket Reply</a></li>
                                <li><a href="javascript:void(0);" onclick="deleteTicketReply('@reply.TicketId', '@reply.TicketReplyId')">Delete Reply</a></li>
                                <li><a href="javascript:void(0);">Send Email</a></li>
                            }

                            <li><a onclick="Sendprint('@reply.TrackingId')" href="javascript:void(0);">Print</a></li>
                        </ul>
                    </div>
                </div>
                <div class="clearfix"></div>
            </div>
            <div id="@key" class="panel-collapse collapse">
                <div class="panel-body">
                    
                    <div class="row">
                        <div class="col-lg-12">
                            <label class="control-label">Message</label>
                            <div class="message" style="word-wrap: break-word;">@Html.Raw(reply.Message)</div>
                            <hr />
                        </div>
                    </div>
                    @if (!string.IsNullOrEmpty(reply.Note))
                    {
                        <div class="row">
                            <div class="col-lg-12">
                                <div class="panel panel-primary">
                                    <div class="panel-heading">Note</div>
                                    <div class="panel-body">
                                        <div class="message">@Html.Raw(reply.Note)</div>
                                    </div>
                                </div>
                            </div>
                        </div>
                    }
                    <div class="row">

                        <div class="col-lg-8">

                            @if (Model.ListofReplyAttachment.Count != 0)
                            {

                                TicketReplyAttachment ticketReplyAttachment = new TicketReplyAttachment();
                                var attachment = ticketReplyAttachment.GetListReplyAttachmentsByAttachmentId(reply.TicketReplyId);

                                if (attachment.Count > 0)
                                {
                                    <label>Attachment</label>
                                    <br />

                                    foreach (var t in attachment)
                                    {
                                        @t.AttachmentName

                                        <a class="btn btn-primary btn-xs" data-toggle="tooltip"
                                           data-placement="top" title="Download Attachment !"
                                           href="/TicketDetailsAgentsAdmin/DownloadReplyAttachMent?ticketReplyId=@t.TicketReplyId"> Download <i class="fa fa-download"></i></a>
                                        if (!reply.DeleteStatus && reply.RoleId == Convert.ToInt16(StatusMain.Roles.AgentAdmin) && reply.SystemUser == Convert.ToInt64(Session["UserId"]))
                                        {
                                            <a data-toggle="tooltip" data-placement="top" title="Delete Attachment !"
                                               class="btn btn-danger btn-xs" onclick="deletereplyAttachment('@t.ReplyAttachmentId', '@t.TicketId')"
                                               href="javascript:void(0);"> Delete <i class="fa fa-trash-o"></i></a>
                                        }
                                        <br />
                                    }
                                }
                               

                            }
                           
                        </div>

                    </div>

                </div>
            </div>
        </div>
    }
}

<script>

    function deletereplyAttachment(attachmentsId, ticketId) {
        var result = confirm("Do you want to delete this attachment!");
        if (result === true) {
            if (attachmentsId != "" & ticketId != "") {
                var jsonObject =
                {
                    attachmentsId: attachmentsId,
                    TicketId: ticketId
                };

                $.ajax({
                    type: "POST",
                    url: "../TicketDetailsAdmin/DeleteReplyAttachment",
                    dataType: "json",
                    data: JSON.stringify(jsonObject),
                    contentType: "application/json; charset=utf-8",
                    success: function (data, textStatus, xhr) {
                        if (data === true) {
                            alert("Attachment Deleted Successfully");
                            location.reload();
                        } else {
                            alert("Something Went Wrong While Deleting Ticket Please Try Again after Sometime!");
                        }

                    },
                    error: function (xhr, status, err) {
                        if (xhr.status == 400) {
                            DisplayModelStateErrors(xhr.responseJSON.ModelState);
                        }
                    }
                });
            }
        }
    }

    function DisplayModelStateErrors(modelState) {
        var message = "";
        var propStrings = Object.keys(modelState);

        $.each(propStrings, function (i, propString) {
            var propErrors = modelState[propString];
            $.each(propErrors, function (j, propError) {
                message += propError;
            });
            message += "\n";
        });

        alert(message);
    };

</script>