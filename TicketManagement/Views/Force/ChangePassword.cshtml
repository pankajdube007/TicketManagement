@model TicketManagement.ViewModels.ChangePasswordFirstLoginModel
@{
    ViewBag.Title = "ChangePassword";
    Layout = "~/Views/Shared/_ForceChangePasswordLayout.cshtml";
}


<div>
    <a class="hiddenanchor" id="signin"></a>
    <div style="margin-top:150px;">
        <div class="row">
            <div class="col-md-12 col-sm-12 col-xs-12">
                <div>
                    <section class="login_content">
                        <div class="col-md-4 col-sm-4 col-xs-12 col-md-offset-4">
                            <div class="row">
                                <div class="col-md-12 col-sm-12 col-xs-12">
                                    <h3 class="text-center">Change Password</h3>
                                </div>
                            </div>
                            @using (Html.BeginForm())
                            {
                                if (TempData["ChangePasswordMessage"] != null)
                                {
                                    <div class="alert alert-success alert-dismissible fade in" role="alert">
                                        <button type="button" class="close" data-dismiss="alert" aria-label="Close">
                                            <span aria-hidden="true">×</span>
                                        </button>
                                        <strong>Message!</strong> @TempData["ChangePasswordMessage"]
                                    </div>
                                }

                                if (TempData["ChangePasswordErrorMessage"] != null)
                                {
                                    <div class="alert alert-success alert-dismissible">
                                        <a href="#" class="close" data-dismiss="alert" aria-label="close">&times;</a>
                                        <strong>Message!</strong> @TempData["ChangePasswordErrorMessage"]
                                    </div>
                                }


                                @Html.ValidationSummary(true, null, new { @class = "alert alert-danger" })
                                @Html.AntiForgeryToken()


                                <div class="row">
                                    <div class="col-md-12 col-sm-12 col-xs-12">
                                        <div class="form-group">
                                            @Html.PasswordFor(m => m.CurrentPassword, new { @placeholder = "Old Password", @maxlength = "128", oncut = "return false", oncopy = "return false", autocomplete = "new-password", AutoCompleteType = "Disabled", @class = "form-control" })
                                            @Html.ValidationMessageFor(m => m.CurrentPassword, "", new { @class = "text-danger" })
                                        </div>
                                    </div>
                                </div>
                                <div class="row">
                                    <div class="col-md-12 col-sm-12 col-xs-12">
                                        <div class="form-group">
                                            @Html.PasswordFor(m => m.NewPassword, new { @placeholder = "New Password", @maxlength = "128", oncut = "return false", oncopy = "return false", onpaste = "return false", autocomplete = "new-password", AutoCompleteType = "Disabled", @class = "form-control" })
                                            @Html.ValidationMessageFor(m => m.NewPassword, "", new { @class = "text-danger" })
                                        </div>
                                    </div>
                                </div>
                                <div class="row">
                                    <div class="col-md-12 col-sm-12 col-xs-12">
                                        <div class="form-group">
                                            @Html.PasswordFor(m => m.ConfirmPassword, new { @placeholder = "Confirm New Password", @maxlength = "128", oncut = "return false", oncopy = "return false", onpaste = "return false", autocomplete = "new-password", AutoCompleteType = "Disabled", @class = "form-control" })
                                            @Html.ValidationMessageFor(m => m.ConfirmPassword, "", new { @class = "text-danger" })
                                        </div>
                                    </div>
                                </div>
                                <div class="row">
                                    <div class="col-md-12 col-sm-12 col-xs-12 text-center">
                                        <div class="form-group">
                                            <button class="btn btn-success submit" id="btnsubmit" name="Command" value="Login"
                                                    type="submit">
                                                Change Password <i class="icon-chevron-right"></i>
                                            </button>
                                        </div>
                                    </div>
                                </div>
                                <div class="clearfix"></div>


                            }

                        </div>

                        <div class="clearfix"></div>
                    </section>
                </div>
            </div>
        </div>


    </div>
</div>


<script src="~/Scripts/crypto/sha512.min.js"></script>

<script type="text/javascript">

    $(document).ready(function () {
        $("#btnsubmit").click(function () {
            if ($('#NewPassword').val() != "" && $('#ConfirmPassword').val() != "" && $('#CurrentPassword').val() != "") {

                if (validatePassword($('#NewPassword').val()) == false) {
                    alert('New Password Must Have Minimum 7 characters at least 1 Alphabet, 1 Number and 1 Special Character !');
                    return false;
                }
                else {
                    var password = $('#NewPassword').val();
                    var passwordhash = sha512(password);

                    var confirmpassword = $('#ConfirmPassword').val();
                    var confirmpasswordhash = sha512(confirmpassword);

                    var currentpassword = $('#CurrentPassword').val();
                    var currentpasswordhash = sha512(currentpassword);

                    $('#CurrentPassword').val(currentpasswordhash);
                    $('#NewPassword').val(passwordhash);
                    $('#ConfirmPassword').val(confirmpasswordhash);
                    $("#cpForm").submit();
                }
            }
        });

        $("#NewPassword").blur(function (event) {
            if ($("#NewPassword").val() != "") {
                if (validatePassword($("#NewPassword").val()) == false) {
                    alert('New Password Must Have Minimum 7 characters at least 1 Alphabet, 1 Number and 1 Special Character !');
                    $("#NewPassword").val('');
                }

                var data = $("#NewPassword").val().length;
                if (data > 20) {
                    alert('Maximum 20 character password is Allowed!');
                    $("#NewPassword").val('');
                }
            }

        });

    });

    function validatePassword(password) {
        var reg = /^(?=.*[A-Za-z])(?=.*\d)(?=.*[$@@$!%*#?&])[A-Za-z\d$@@$!%*#?&]{7,}$/;
        if (reg.test(password)) {
            return true;
        } else {
            return false;
        }
    }

</script>