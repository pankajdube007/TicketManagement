@model TicketManagement.ViewModels.ChangePasswordViewModel
@{
    ViewBag.Title = "Changepassword";
    Layout = "~/Views/Shared/_LayoutAgent.cshtml";
}

<div class="">
    <div class="col-md-12 col-sm-12 col-xs-12">
        <div class="x_panel">
            <div class="x_title">
                <h2><i class="fa fa-cogs" style="font-size: 24px; color: #50C878"> </i> Settings </h2>

                <div class="clearfix"></div>
            </div>
            <div class="x_content">

                @using (Html.BeginForm("Changepassword", "Agent", FormMethod.Post, new { @id = "cpForm", @name = "cpForm" }))
                {
                    if (TempData["MessageChangePassword"] != null)
                    {
                        <div class="alert alert-success alert-dismissible">
                            <a href="#" class="close" data-dismiss="alert" aria-label="close">&times;</a>
                            <strong>Message!</strong> @TempData["MessageChangePassword"]
                        </div>
                    }

                    @Html.ValidationSummary(true, "", new { @class = "text-danger" })

                    <div class="tab-pane active" id="changepassword">
                        <h2>Change password</h2>
                        <hr>
                        <div class="row">
                            <div class="col-lg-4">
                                <label>Existing Password</label>
                                @Html.PasswordFor(m => m.ExistingPassword, new { @class = "form-control" })
                                @Html.ValidationMessageFor(model => model.ExistingPassword, "", new { @class = "text-danger" })
                            </div>
                        </div>
                        <div class="row">
                            <div class="col-lg-4">
                                <label>New Password</label>
                                @Html.PasswordFor(m => m.NewPassword, new { @class = "form-control" })
                                @Html.ValidationMessageFor(model => model.NewPassword, "", new { @class = "text-danger" })
                            </div>
                        </div>
                        <div class="row">
                            <div class="col-lg-4">
                                <label>Confirm New Password</label>
                                @Html.PasswordFor(m => m.ConfirmPassword, new { @class = "form-control" })
                                @Html.ValidationMessageFor(model => model.ConfirmPassword, "", new { @class = "text-danger" })
                            </div>
                        </div>
                    </div>
                    <div class="row">
                        <div class="col-xs-12">
                            <br>
                            <button class="btn btn-success" id="btnsubmit" type="submit"><i class="fa fa-check-circle"></i> Save Changes</button>
                            <a href="/AgentDashboard/Dashboard" class="btn btn-default"><i class="glyphicon glyphicon-repeat"></i> Cancel</a>
                        </div>
                    </div>




                }
            </div>
        </div>
    </div>
</div>
@section customscripts{
    <script src="~/Scripts/crypto/sha512.min.js"></script>

    <script type="text/javascript">

        $(document).ready(function() {
            $("#btnsubmit").click(function() {
                if ($('#NewPassword').val() != "" && $('#ConfirmPassword').val() != "" && $('#ExistingPassword').val() != "") {

                    if (validatePassword($('#NewPassword').val()) == false) {
                        alert('New Password Must Have Minimum 7 characters at least 1 Alphabet, 1 Number and 1 Special Character !');
                        return false;
                    } else {
                        var password = $('#NewPassword').val();
                        var passwordhash = sha512(password);

                        var confirmpassword = $('#ConfirmPassword').val();
                        var confirmpasswordhash = sha512(confirmpassword);

                        var currentpassword = $('#ExistingPassword').val();
                        var currentpasswordhash = sha512(currentpassword);

                        $('#ExistingPassword').val(currentpasswordhash);
                        $('#NewPassword').val(passwordhash);
                        $('#ConfirmPassword').val(confirmpasswordhash);
                        $("#cpForm").submit();
                    }
                }
            });

            $("#NewPassword").blur(function(event) {
                if ($("#NewPassword").val() != "") {
                    if (validatePassword($("#NewPassword").val()) == false) {
                        alert('New Password Must Have Minimum 7 characters at least 1 Alphabet, 1 Number and 1 Special Character !');
                        $("#NewPassword").val('');
                    }

                    var data = $("#NewPassword").val().length;
                    if (data > 20) {
                        alert('Maximum 20 character password is Allowed!');
                        $("#NewPassword").val('');
                    }
                }

            });

        });

        function validatePassword(password) {
            var reg = /^(?=.*[A-Za-z])(?=.*\d)(?=.*[$@@$!%*#?&])[A-Za-z\d$@@$!%*#?&]{7,}$/;
            if (reg.test(password)) {
                return true;
            } else {
                return false;
            }
        }

    </script>

}