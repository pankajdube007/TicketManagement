@model TicketManagement.Models.Category

@{
    Layout = "~/Views/Shared/_LayoutSuperAdmin.cshtml";
}

<div class="col-md-6 col-xs-12">
    <div class="x_panel">
        <div class="x_title">
            <h2> Add Category</h2>
            <div class="clearfix"></div>
        </div>
        <div class="x_content">
            <br />




    @using (Html.BeginForm())
            {
                @Html.AntiForgeryToken()

                if (TempData["CategorySuccessMessages"] != null)
                {
                    <div class="alert alert-success alert-dismissible">
                        <a href="#" class="close" data-dismiss="alert" aria-label="close">&times;</a>
                        <strong>Message!</strong> @TempData["CategorySuccessMessages"]
                    </div>
                }

                @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                <div class="form-group">
                    @Html.LabelFor(model => model.CategoryName, htmlAttributes: new { @class = "control-label" })
                    @Html.EditorFor(model => model.CategoryName, new { htmlAttributes = new { @class = "form-control", @maxlength = 20 } })
                    @Html.ValidationMessageFor(model => model.CategoryName, "", new { @class = "text-danger" })
                </div>
                    <div class="form-group">
                        @Html.LabelFor(model => model.CategoryCode, htmlAttributes: new { @class = "control-label" })
                        @Html.EditorFor(model => model.CategoryCode, new { htmlAttributes = new { @class = "form-control", @maxlength = 4 } })
                        @Html.ValidationMessageFor(model => model.CategoryCode, "", new { @class = "text-danger" })
                    </div>
                    <div class="form-group">
                        @Html.LabelFor(model => model.Status, htmlAttributes: new { @class = "control-label" })
                        <br />
                        @Html.CheckBoxFor(model => model.Status, new { @checked = "checked" })
                        @Html.ValidationMessageFor(model => model.Status, "", new { @class = "text-danger" })
                    </div>
                    <div class="form-group">
                        @Html.LabelFor(model => model.CategoryDescription, htmlAttributes: new { @class = "control-label" })
                        @Html.EditorFor(model => model.CategoryDescription, new { htmlAttributes = new { @class = "form-control", @maxlength = 30 } })
                        @Html.ValidationMessageFor(model => model.CategoryDescription, "", new { @class = "text-danger" })
                    </div>
                    <div class="form-group">
                        <button class="btn btn-round btn-success" type="submit">Submit</button>
                        <a href="/Category/Create" class="btn btn-round btn-primary">Reset</a>
                        <a href="/Category/Index" class="btn btn-round btn-primary">Back to List</a>
                    </div>

            }


        </div>
    </div>
</div>
<script src="~/Scripts/ValidationScript/category.validate.js"></script>
