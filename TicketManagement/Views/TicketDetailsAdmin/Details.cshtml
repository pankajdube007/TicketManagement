@using TicketManagement.Models
@model TicketManagement.ViewModels.DisplayTicketViewModel
@{
    Layout = "~/Views/Shared/_LayoutAdmin_Ticket.cshtml";
}

<div class="col-md-12 col-xs-12">
    <div class="x_panel">
        <div class="x_title">
            <h2><i class="fa fa-ticket" style="font-size: 24px; color: #50C878"> </i> View Ticket </h2>
            <div class="clearfix"></div>
        </div>
        <div class="x_content">
            <br />
            <div class="col-md-9 col-xs-9">

                <div style="margin-bottom: 10px">

                    @if (Model.EscalationStatus == true && Model.EscalationStage == 2)
                    {
                        <span data-toggle="tooltip" style="margin-right: 5px" data-placement="bottom" title="@Model.EscalatedUser.EscalationDate2" class="label label-danger">
                            Ticket Escalated To You :- @Model.EscalatedUser.UserStage2
                        </span>
                    }

                    @if (Model.FirstResponseStatus == true)
                    {
                        <span data-toggle="tooltip" style="margin-right: 5px" data-placement="bottom" title="@Model.FirstResponseDue !" class="label label-danger">FirstResponse Overdue</span>
                    }

                    @if (Model.ResolutionStatus == true)
                    {
                        <span data-toggle="tooltip" style="margin-right: 5px" data-placement="bottom" title="@Model.ResolutionDue !" class="label label-danger">Resolution Overdue</span>
                    }

                    @if (Model.EveryResponseStatus == true)
                    {
                        <span data-toggle="tooltip" style="margin-right: 5px" data-placement="bottom" title="EVERY RESPONSE DUE !" class="label label-danger">Every Response Overdue</span>
                    }
                </div>

                @if (TempData["TicketReplyMessage"] != null)
                {
                    <div class="alert alert-success alert-dismissible">
                        <a href="" class="close" data-dismiss="alert" aria-label="close">&times;</a>
                        <strong>Message!</strong> @TempData["TicketReplyMessage"]
                    </div>
                }

                <div class="panel panel-info">
                    <div data-toggle="collapse" data-target="#collapseMain" class="panel-heading">
                        <div class="col-sm-4 col-xs-12">
                            <i class="fa fa-envelope" style="font-size: 20px; color: #000000"></i> | <button type="button" onclick="profile('@Model.UserId')" class="btn btn-default btn-xs">@Model.RoleName</button>
                        </div>
                        <div class="col-sm-5 col-xs-12">
                            <div class="pull-right">
                                @if (Model.TicketLockStatus == 1)
                                {
                                    <i class="fa fa-lock" style="color: gold" aria-hidden="true"></i>
                                    <text> Locked Ticket </text>
                                }
                            </div>
                        </div>
                        <div class="col-sm-3 col-xs-12">

                            <div class="dropdown pull-right">
                                <button class="btn btn-default btn-xs dropdown-toggle" type="button" data-toggle="dropdown">
                                    Options
                                    <span class="caret"></span>
                                </button>
                                @if (Model.DeleteStatus == false)
                                {
                                    <ul class="dropdown-menu">
                                        <li><a href="/TicketAdmin/EditTicket?trackingid=@Model.TrackingId">Edit Ticket</a></li>
                                        <li><a onclick="SendEmail('@Model.TrackingId')" href="javascript:void(0);">Send Email</a></li>
                                        <li><a onclick="Sendprint('@Model.TrackingId')" href="javascript:void(0);">Print</a></li>
                                        @if (Model.TicketLockStatus == 1)
                                        {
                                            <li><a onclick="UnLockTicket('@Model.TicketId')" href="javascript:void(0);"><i class="fa fa-unlock" aria-hidden="true"></i> UnLock Ticket</a></li>
                                        }
                                        else
                                        {
                                            <li><a onclick="LockTicket('@Model.TicketId')" href="javascript:void(0);"><i class="fa fa-lock" aria-hidden="true"></i> Lock Ticket</a></li>
                                        }
                                    </ul>
                                }
                            </div>
                        </div>
                        <div class="clearfix"></div>
                    </div>
                    <div id="collapseMain" class="panel-collapse collapse in">
                        <div class="panel-body">
                            <div class="row">
                                <div class="col-lg-12">
                                    <h2> @Html.Raw(Model.Subject)</h2>
                                </div>
                            </div>
                            <div class="row">
                                <div class="col-md-6 text-left">
                                    Created by - @Model.Name
                                </div>
                                <div class="col-md-6 text-right">
                                    <i style="font-size: 14px; color: #50C878" class="fa fa-clock-o"></i> CreatedDate - @Model.CreatedDate
                                </div>
                                <hr />
                            </div>
                            <div class="row">
                                <div class="col-lg-12">
                                    @Html.HiddenFor(m => m.FirstResponseStatus)
                                    @Html.HiddenFor(m => m.ResolutionStatus)
                                    @Html.HiddenFor(m => m.EveryResponseStatus)
                                    @Html.HiddenFor(m => m.EscalationStatus)
                                    @Html.HiddenFor(m => m.TicketId)
                                    <div class="message">@Html.Raw(Model.Message)</div>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>

                @if (Model.ViewMainModel != null)
                {
                    Html.RenderPartial("_TicketReplyHistory", Model.ViewMainModel);
                }
                @if (Model.DeleteStatus == false)
                {
                    <div class="panel panel-primary">
                        <div class="panel-heading"><i class="fa fa-ticket"></i> Add reply</div>
                        <div class="panel-body">
                            @if (Model.TicketReply != null)
                            {
                                using (Html.BeginForm("Details", "TicketDetailsAdmin", FormMethod.Post, new { id = "ReplyTicketform", enctype = "multipart/form-data" }))
                                {
                                    {
                                        Html.RenderPartial("_TicketReply", Model.TicketReply);
                                    }
                                }
                            }
                        </div>
                    </div>
                }
            </div>
            <div class="col-md-3 col-xs-3">
                <div class="panel panel-default">
                    <div class="panel-heading">
                        <h4 class="panel-title"
                            data-toggle="collapse"
                            data-target="#collapseinfo">
                            <i class="fa fa-info-circle"></i> Ticket Information
                        </h4>
                    </div>

                    <div id="collapseinfo" class="panel-collapse collapse in">
                        <div class="panel-body">
                            <i style="font-size: 14px; color: #50C878" class="fa fa-ticket"></i> <small>Ticket</small> <br /> @Model.TrackingId
                        </div>
                    </div>
                </div>

                @if (Model.DeleteStatus == false)
                {
                    <div class="panel panel-default">
                        <div class="panel-heading">
                            <h4 class="panel-title"
                                data-toggle="collapse"
                                data-target="#collapsestatus">
                                <i class="fa fa-info-circle"></i> Change Priority / Status
                            </h4>
                        </div>
                        <div id="collapsestatus" class="panel-collapse collapse in">
                            <div class="panel-body">
                                @Html.LabelFor(model => model.PriorityId, htmlAttributes: new { @class = "control-label" })
                                @Html.DropDownListFor(model => model.PriorityId, new SelectList(Model.ListofPriority, "Value", "Text"), new { @class = "form-control" })
                                @Html.ValidationMessageFor(model => model.PriorityId, "", new { @class = "text-danger" })

                                @Html.LabelFor(model => model.StatusId, htmlAttributes: new { @class = "control-label" })
                                @Html.DropDownListFor(model => model.StatusId, new SelectList(Model.ListofStatus, "Value", "Text"), new { @class = "form-control" })
                                @Html.ValidationMessageFor(model => model.StatusId, "", new { @class = "text-danger" })

                                @Html.LabelFor(model => model.CategoryId, htmlAttributes: new { @class = "control-label" })
                                @Html.DropDownListFor(model => model.CategoryId, new SelectList(Model.ListofCategory, "Value", "Text"), new { @class = "form-control" })
                                @Html.ValidationMessageFor(model => model.CategoryId, "", new { @class = "text-danger" })
                            </div>
                        </div>
                    </div>

                }

                <div class="panel panel-default">
                    <div class="panel-heading">
                        <h4 class="panel-title"
                            data-toggle="collapse"
                            data-target="#collapseAttachment">
                            <i class="glyphicon glyphicon-paperclip"></i> Attachments
                        </h4>
                    </div>

                    <div id="collapseAttachment" class="panel-collapse collapse in">
                        <div class="panel-body">
                            @*@{
                                    Html.RenderPartial("_TicketAttachment", Model);
                                }*@
                        </div>
                    </div>
                </div>

                <div class="panel panel-default">
                    <div class="panel-heading">
                        <h4 class="panel-title"
                            data-toggle="collapse"
                            data-target="#Tickethistorypanel">
                            <i class="fa fa-history"></i> Ticket history
                        </h4>
                    </div>
                    <div id="Tickethistorypanel" class="panel-collapse collapse in">
                        <div class="panel-body">
                            <button type="button" data-toggle="tooltip"
                                    data-placement="top"
                                    title="Show Activities" id="btnActivities" class="btn btn-default">
                                <i class="fa fa-history"></i> Show Activities
                            </button>
                        </div>
                    </div>
                </div>

            </div>
        </div>
    </div>
</div>




<div class="modal fade" id="myModal" tabindex="-1" role="dialog" aria-hidden="true">
    <div class="modal-dialog modal-lg">
        <div class="modal-content">
            <div class="modal-header">
                <button type="button" class="close" data-dismiss="modal">
                    <span aria-hidden="true">×</span>
                </button>
                <h4 class="modal-title" id="myModalLabel"> <i class="fa fa-history"></i> Activities</h4>
            </div>
            <div id="Tickethistory" style="height:500px;overflow-y:auto;" class="modal-body">
            </div>
        </div>
    </div>
</div>
<script src="~/Scripts/ValidationScript/tickethistory.js"></script>
<script src="~/Scripts/ValidationScript/ticketreplyadmin.validate.js"></script>
<script src="~/Scripts/custom/custom.profile.js"></script>
<script type="text/javascript">

    CKEDITOR.replace('Message', { htmlEncodeOutput: true });

    function Sendprint(value) {
        window.open('/Print/Ticket?trackingId=' + value, '_blank');
        return false;
    }

    //function downloadAttachment(attachmentsId) {
    //    window.location = "/TicketDetailsAdmin/DownloadAttachMent?AttachmentId=" + attachmentsId;
    //}

    function deleteAttachment(attachmentsId, ticketId) {
        var result = confirm("Do you want to delete this attachment!");
        if (result === true) {
            if (attachmentsId != "") {
                var jsonObject =
                {
                    attachmentsId: attachmentsId,
                    TicketId: ticketId
                };


                $.ajax({
                    type: "POST",
                    url: "../TicketDetailsAdmin/DeleteAttachment",
                    dataType: "json",
                    data: JSON.stringify(jsonObject),
                    contentType: "application/json; charset=utf-8",
                    success: function (data, textStatus, xhr) {
                        if (data === true) {
                            alert("Attachment Deleted Successfully");
                            location.reload();
                        } else {
                            alert("Something Went Wrong While Deleting Ticket Please Try Again after Sometime!");
                        }

                    },
                    error: function (xhr, status, err) {
                        if (xhr.status == 400) {
                            DisplayModelStateErrors(xhr.responseJSON.ModelState);
                        }
                    }
                });
            }
        }
    }

    function LockTicket(lockTicketId) {
        var jsonObject = {
            TicketId: lockTicketId
        };

        $.ajax({
            type: "POST",
            url: "../TicketDetailsAdmin/ProcessLockTicket",
            dataType: "json",
            data: JSON.stringify(jsonObject),
            contentType: "application/json; charset=utf-8",
            success: function (data, textStatus, xhr) {
                if (data === true) {
                    alert("Ticket Has been Locked");
                    location.reload();
                } else {
                    alert("Something Went Wrong While Processing your request!");
                }
            },
            error: function (xhr, status, err) {
                if (xhr.status == 400) {
                    DisplayModelStateErrors(xhr.responseJSON.ModelState);
                }
            }
        });
    }

    function UnLockTicket(lockTicketId) {
        var jsonObject = {
            TicketId: lockTicketId
        };

        $.ajax({
            type: "POST",
            url: "../TicketDetailsAdmin/ProcessUnLockTicket",
            dataType: "json",
            data: JSON.stringify(jsonObject),
            contentType: "application/json; charset=utf-8",
            success: function (data, textStatus, xhr) {
                if (data === true) {
                    alert("Ticket Has been Locked");
                    location.reload();
                } else {
                    alert("Something Went Wrong While Processing your request!");
                }
            },
            error: function (xhr, status, err) {
                if (xhr.status == 400) {
                    DisplayModelStateErrors(xhr.responseJSON.ModelState);
                }
            }
        });
    }
</script>
<script>
    $(document).ready(function () {
        $('[data-toggle="tooltip"]').tooltip();
    });
</script>