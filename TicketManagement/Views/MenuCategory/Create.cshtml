@model TicketManagement.ViewModels.AddCategoriesVM
@{
    Layout = "~/Views/Shared/_LayoutSuperAdmin.cshtml";
}

<div class="col-md-12 col-xs-12">
    <div class="x_panel">
        <div class="x_title">
            <h2> Add Menu Category</h2>
            <div class="clearfix"></div>
        </div>
        <div class="x_content">
            <br />
            @using (Html.BeginForm("Create", "MenuCategory", FormMethod.Post))
            {
                @Html.AntiForgeryToken()

                if (TempData["CategorySuccessMessages"] != null)
                {
                    <div class="alert alert-success alert-dismissible">
                        <a href="#" class="close" data-dismiss="alert" aria-label="close">&times;</a>
                        <strong>Message!</strong> @TempData["CategorySuccessMessages"]
                    </div>
                }

                @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                <div class="col-md-4 col-sm-4 col-xs-12">
                    @Html.LabelFor(model => model.RoleId, htmlAttributes: new { @class = "mandatory" })
                    @Html.DropDownListFor(model => model.RoleId, new SelectList(Model.ListofRoles, "Value", "Text"), new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.RoleId, "", new { @class = "text-danger" })
                </div>
                <div class="col-md-4 col-sm-4 col-xs-12">
                    @Html.LabelFor(model => model.MenuCategoryName, htmlAttributes: new { @class = "mandatory" })
                    @Html.EditorFor(model => model.MenuCategoryName, new { htmlAttributes = new { @class = "form-control", @maxlength = 20 } })
                    @Html.ValidationMessageFor(model => model.MenuCategoryName, "", new { @class = "text-danger" })
                </div>

                <div class="col-md-4 col-sm-4 col-xs-12">
                    @Html.LabelFor(model => model.IsActive, htmlAttributes: new { @class = "mandatory" })
                    <br />
                    @Html.CheckBoxFor(model => model.IsActive, new { @checked = "checked" })
                    @Html.ValidationMessageFor(model => model.IsActive, "", new { @class = "text-danger" })
                </div>
                <div class="clearfix"></div>
                <div class="col-md-4 col-sm-4 col-xs-12" style="margin-top:10px;">
                    <button class="btn btn-round btn-success" type="submit">Submit</button>
                    <a href="/MenuCategory/Create" class="btn btn-round btn-primary">Reset</a>
                    <a href="/MenuCategory/Index" class="btn btn-round btn-primary">Back to List</a>
                </div>

            }
        </div>
    </div>
</div>