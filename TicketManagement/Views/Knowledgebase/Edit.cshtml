@model TicketManagement.ViewModels.EditKnowledgebaseViewModel
@{
    Layout = "~/Views/Shared/_LayoutAdminKnowledgebase.cshtml";
}

<div class="col-md-12 col-xs-12">
    <div class="x_panel">
        <div class="x_title">
            <h2>Edit Knowledgebase</h2>
            <div class="clearfix"></div>
        </div>
        <div class="x_content">
            <br />

            @if (TempData["KnowledgebaseMessage"] != null)
            {
                <div class="alert alert-success alert-dismissible">
                    <a href="#" class="close" data-dismiss="alert" aria-label="close">&times;</a>
                    <strong>Message!</strong> @TempData["KnowledgebaseMessage"]
                </div>
            }
            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
            @using (Html.BeginForm("Edit", "Knowledgebase", FormMethod.Post, new { id = "Knowledgebaseform", enctype = "multipart/form-data" }))
            {
                @Html.AntiForgeryToken()
                @Html.HiddenFor(model => model.KnowledgebaseId)
                <div class="col-md-4 col-sm-4 col-xs-12">
                    @Html.LabelFor(model => model.CategoryId, htmlAttributes: new { @class = "mandatory" })
                    @Html.DropDownListFor(model => model.CategoryId, new SelectList(Model.ListofCategory, "Value", "Text"), new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.CategoryId, "", new { @class = "text-danger" })
                </div>
                <div class="col-md-4 col-sm-4 col-xs-12">
                    @Html.LabelFor(model => model.KnowledgebaseTypeId, htmlAttributes: new { @class = "mandatory" })
                    @Html.DropDownListFor(model => model.KnowledgebaseTypeId, new SelectList(Model.ListofKnowledgebaseType, "Value", "Text"), new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.KnowledgebaseTypeId, "", new { @class = "text-danger" })
                </div>
                <div class="col-md-4 col-sm-4 col-xs-12">
                </div>
                <div class="col-lg-6 col-sm-6 col-xs-12">
                    @Html.LabelFor(model => model.Subject, htmlAttributes: new { @class = "mandatory" })
                    @Html.TextBoxFor(model => model.Subject, new { @class = "form-control", @maxlength = 80 })
                    @Html.ValidationMessageFor(model => model.Subject, "", new { @class = "text-danger" })
                </div>
                <div class="col-lg-12">
                    @Html.LabelFor(model => model.Contents, htmlAttributes: new { @class = "mandatory" })
                    @Html.TextAreaFor(model => model.Contents, new { @class = "form-control", @maxlength = 2000, @onkeypress = "return onlyspecchar(event);" })
                    @Html.ValidationMessageFor(model => model.Contents, "", new { @class = "text-danger" })
                </div>

                <div class="col-lg-12">
                    @Html.LabelFor(model => model.Keywords, htmlAttributes: new { @class = "control-label" })
                    @Html.TextBoxFor(model => model.Keywords, new { @class = "form-control", @data_role = "tagsinput", @maxlength = 50 })
                    @Html.ValidationMessageFor(model => model.Keywords, "", new { @class = "text-danger" })
                </div>
                <div class="col-md-4 col-sm-4 col-xs-12">
                    @Html.LabelFor(model => model.Status, htmlAttributes: new { @class = "control-label" })
                    @Html.CheckBoxFor(model => model.Status)
                    @Html.ValidationMessageFor(model => model.Status, "", new { @class = "text-danger" })
                </div>
                <div class="clearfix"></div>

                <div class="col-md-4 col-sm-4 col-xs-12">
                    @if (Model.ListofAttachments.Count > 0)
                    {
                        @Html.Label("Attachments Uploaded")
                        <br />
                        foreach (var attachment in Model.ListofAttachments)
                        {
                            <a class="glyphicon glyphicon-remove" style="color: #d9534f;" onclick="deleteAttachment('@attachment.KnowledgebaseAttachmentsId')" href="javascript:void(0);"></a>
                            <a class="glyphicon glyphicon-download-alt" onclick="Download('@attachment.KnowledgebaseAttachmentsId')" href="javascript:void(0);"></a>
                            @attachment.AttachmentsName
                            <br />
                        }
                    }
                    else
                    {
                        <i class="red">No Download</i>

                    }
                </div>

                <div class="clearfix"></div>
                <div class="col-md-4 col-sm-4 col-xs-12">
                    <br />
                    @Html.Label("Attachments")
                    <input type="file" id="fileupload_1" class="form-control" name="fileupload_1" />
                    <div class="text-danger" name="_val1" id="_val1">
                    </div>
                </div>
                <div class="col-md-4 col-sm-4 col-xs-12">
                    <br />
                    @Html.Label("Attachments")
                    <input type="file" id="fileupload_2" class="form-control" name="fileupload_2" />
                    <div class="text-danger" name="_val2" id="_val2">
                    </div>
                </div>
                <div class="col-md-4 col-sm-4 col-xs-12">
                    <br />
                    @Html.Label("Attachments")
                    <input type="file" id="fileupload_3" class="form-control" name="fileupload_3" />
                    <div class="text-danger" name="_val3" id="_val3">
                    </div>
                </div>


                <div class="col-lg-6 col-sm-6 col-xs-12">
                    <br />
                    <button class="btn btn-primary" type="submit"><i class="fa fa-check-circle"></i> Save Changes</button>
                    <a href="/Knowledgebase/AllKnowledgebase" class="btn btn-default"><i class="glyphicon glyphicon-repeat"></i> Back</a>
                </div>

            }
        </div>
    </div>
</div>

<script type="text/javascript">
    CKEDITOR.replace('Contents', { htmlEncodeOutput: false });
</script>

<script type="text/javascript">

    function Download(attachmentsId) {
        window.location = "/Knowledgebase/DownloadAttachMent/" + attachmentsId;
    }

    function deleteAttachment(attachmentsId) {
        var result = confirm("Do you want to delete this attachment!");
        if (result === true) {
            if (attachmentsId != "") {
                var jsonObject =
                {
                    KnowledgebaseAttachmentsId: attachmentsId
                };

                $.ajax({
                    type: "POST",
                    url: "../Knowledgebase/DeleteAttachment",
                    dataType: "json",
                    data: JSON.stringify(jsonObject),
                    contentType: "application/json; charset=utf-8",
                    success: function (data, textStatus, xhr) {
                        if (data === true) {
                            alert("Attachment Deleted Successfully");
                            location.reload();
                        } else {
                            alert("Something Went Wrong While Deleting Ticket Please Try Again after Sometime!");
                        }

                    },
                    error: function (xhr, status, err) {
                        if (xhr.status == 400) {
                            DisplayModelStateErrors(xhr.responseJSON.ModelState);
                        }
                    }
                });
            }
        }
    }
</script>
