@model TicketManagement.ViewModels.KnowledgebaseArticleViewModel


<div class="col-md-12 col-xs-12">
    <div class="x_panel">
        <div class="x_title">
            <h2>Solution</h2>
            <div class="clearfix"></div>
        </div>
        <div class="x_content">
            <br />


            <div class="row">
                <div class="col-lg-8">
                    @Html.LabelFor(model => model.Subject, htmlAttributes: new { @class = "control-label" })
                    <br />

                    @Html.Raw(Model.Subject)
                </div>
            </div>
            <hr />
            <div class="row top-buffer">
                <div class="col-lg-6">
                    @Html.LabelFor(model => model.CategoryName, htmlAttributes: new { @class = "control-label" })
                    <br />
                    @Html.Raw(Model.CategoryName)
                </div>
                <div class="col-lg-6">
                    @Html.LabelFor(model => model.KnowledgebaseTypeName, htmlAttributes: new { @class = "control-label" })
                    <br />
                    @Html.Raw(Model.KnowledgebaseTypeName)
                </div>
            </div>
            <hr />
            <div class="row">
                <div class="col-lg-12">
                    @Html.LabelFor(model => model.Contents, htmlAttributes: new { @class = "control-label" })
                    <br />

                    @Html.Raw(Model.Contents)

                </div>
            </div>
            <hr />
            <div class="row top-buffer">
                <div class="col-lg-8">
                    @Html.LabelFor(model => model.Keywords, htmlAttributes: new { @class = "control-label" })
                    @Html.Raw(Model.Keywords)

                </div>
                <div class="col-lg-4">
                    @Html.LabelFor(model => model.Status, htmlAttributes: new { @class = "control-label" })
                    @Html.CheckBoxFor(model => model.Status)
                </div>
            </div>
            <hr />
            <div class="row top-buffer">
                <div class="col-lg-4">
                    @if (Model.ListofAttachments.Count > 0)
                    {
                        @Html.Label("Attachments Uploaded")
                        <br />
                        foreach (var attachment in Model.ListofAttachments)
                        {
                            <a class="glyphicon glyphicon-remove" style="color: #d9534f;" onclick="deleteAttachment('@attachment.KnowledgebaseAttachmentsId')" href="javascript:void(0);"></a>
                            <a class="glyphicon glyphicon-download-alt" onclick="Download('@attachment.KnowledgebaseAttachmentsId')" href="javascript:void(0);"></a>
                            @attachment.AttachmentsName
                            <br />
                        }
                    }
                    else
                    {

                    }
                </div>
            </div>
        </div>
    </div>
</div>


<script type="text/javascript">
    function Download(attachmentsId) {
        window.location = "/Knowledgebase/DownloadAttachMent/" + attachmentsId;
    }

    function deleteAttachment(attachmentsId) {
        var result = confirm("Do you want to delete this attachment!");
        if (result === true) {
            if (attachmentsId != "") {
                var jsonObject =
                {
                    KnowledgebaseAttachmentsId: attachmentsId
                };

                $.ajax({
                    type: "POST",
                    url: "../Knowledgebase/DeleteAttachment",
                    dataType: "json",
                    data: JSON.stringify(jsonObject),
                    contentType: "application/json; charset=utf-8",
                    success: function (data, textStatus, xhr) {
                        if (data === true) {
                            alert("Attachment Deleted Successfully");
                            location.reload();
                        } else {
                            alert("Something Went Wrong While Deleting Ticket Please Try Again after Sometime!");
                        }

                    },
                    error: function (xhr, status, err) {
                        if (xhr.status == 400) {
                            DisplayModelStateErrors(xhr.responseJSON.ModelState);
                        }
                    }
                });
            }
        }
    }
</script>